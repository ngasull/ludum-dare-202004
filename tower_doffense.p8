pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
function cell_at(pos)
	return {
		flr(pos[1] / 8),
		flr(pos[2] / 8),
	}
end

function next_cell(cell, d)
	local nc = {}
	for i, c in pairs(cell) do
		add(nc, c + d[i])
	end
	return nc
end

function poseq(a, b)
	return a[1] == b[1] and a[2] == b[2]
end

function anim_len(a)
	return a.len or count(a.frames) * (a.step or 100)
end

function mcellget(cell)
	local levelmap = levels[nlevel].map
	return mget(levelmap[1] + cell[1], levelmap[2] + cell[2])
end

function btnpr(b)
	if btn(b) and not _btnprs[b] then
		_btnprs[b] = true
		return true
	else
		return false
	end
end

_btnprs = {}

sniper = {
	radius = 128,
	cd = 1500,
	power = 10,
}

levels = {
	{
		map = {0, 0},
		ennemies = {{
			{4,6,0,{anim=0}},
		},{
			{11,6},
			{11,8,200},
			{12,8,400},
			{12,6,600},
		}},
	}, {
		map = {16,0},
		ennemies = {{
			{27,4,0,sniper},
			},{
			{27,5},
			{27,6,300},
			{27,7,600},
			},{
			{22,3},
			{22,1},
			{24,3,600},
			{24,1,600},
			{26,3,1200},
			{26,1,1200},
			},{
			{23,4,0,sniper},
			{29,8,500},
			{29,6,1000},
		}}
	}, {
		map = {32, 0},
		bpos = {0, 4*8+3},
		flags = {
			{120, 68},
			{120, 84}
		},
		ennemies = {{
			{32,0,0,sniper},
			{47,0,0,sniper}
		},{
			{34,12,0,sniper},
		},{
			{36,9},
			{36,7,200},
			{37,9,600},
			{37,7,800},
		},{
			{47,12,0,sniper},
			{32,12,200,sniper},
		},{
			{46,9},
			{45,11,800},
			{44,9,1600},
			{43,11,2400},
			{42,9,3200},
			{41,11,4000},
			{40,9,4800},
			{39,11,5600},
			{38,9,6400},
		}}
	}, {
		map = {48, 0},
		bpos = {0, 4*8+3},
		flags = {
			{88, 112},
			{72, 112}
		},
		ennemies = {{
			{57,13},
			{59,13},
			{57,12,100},
			{59,12,100},
			{57,11,200},
			{59,11,200},
			{57,10,300},
			{59,10,300},
			{57,9,400},
			{59,9,400},
			{57,8,500},
			{59,8,500},
			{57,7,600},
			{59,7,600},
			{57,6,700},
			{59,6,700},
		},{
			{62,0,0,sniper},
			{54,7,500,sniper},
		}},
	}, {
		map = {64, 0},
		bpos = {11*8+3,0},
		bdir = {0,1},
		flags = {
			{56, 112},
			{72, 112}
		},
		ennemies = {{
			{78,2,0,sniper},
			{78,13,0,sniper},
			{74,9,500},
			{76,9,500},
			{74,8,600},
			{76,8,600},
			{74,7,700},
			{76,7,700},
		},{
			{68,3},
			{69,3},
			{70,3},
			{71,3},
			{67,2,500,sniper},
			{72,2,500,sniper},
		},{
			{69,6,0,{radius=30}},
			{70,6,0,{radius=30}},
			{69,8,0,sniper},
		},{
			{68,7,0,sniper},
			{71,7,0,sniper},
		},{
			{71,9},
			{71,11},
			{73,9},
			{73,11},
		}},
	}
}

tutos = {
	{
		{2,7,"a tower! quick,\nmash c to smash it!!"},
		{6,7,"that was some unfair\ndamage to our boat...\nrepair it by mashing v!"},
		{8,7,"oh no, more towers.\ncmon mash buttons\nto keep it alive!!"},
	}, {
		{1,7,"that tower is far away.\nhold a direction to\nget out of the boat."},
		{4,7,false},
	},
}

anim_flag = {
	frames={35,51,36,52},
}

anim_idle = {
	frames={9,10,11,12},
	step=400,
}
anim_run = {
	frames={41,57,41},
}
anim_pattack = {
	frames={58,42},
	w=2,
	step=80,
}
anim_phold = {
	frames={11,12,11,10,10,9,9,9},
	step=80,
}
anim_pjump = {
	frames={44,45,60,61},
	step=50,
	len=700,
}

anim_ending = {
 frames={75,76,76,77,76},
}

mspf = 16
level_h = 15 * 8
level_w = 16 * 8
title = true
play = false
gameover = false
ending = false
nlevel = 1
water = 2
radius = 15
basespeed = 4 * mspf / 1000
bpower = 1
bhpmax = 100
battackanimlen = 100
brepairanimlen = 200
pspeed = 40 * mspf / 1000
ppower = 1
flaganim = 0
endinganim = 0

function initlevel(n)
	title = false
	play = true
	gameover = false
	nlevel = n
	level = levels[n]
	ennemies = {}
	for group in all(level.ennemies) do
		add(ennemies, group)
	end
	tuto = nil
	tutorepair = false
	tutogetout = false
	bhp = bhpmax
	speed = basespeed
	bdir = level.bdir or {1,0}
	bpos = level.bpos and {level.bpos[1],level.bpos[2]} or {0,7*8+3}
	bcell = cell_at(bpos)
	battackanim = false
	battack = false
	brepairanim = false
	ppos = nil
	pholdanim = false
	pidleanim = false
	prunanim = false
	pattackanim = false
	pjumpanim = false
	towers = {}
	delayed_ennemies = {}
end

--initlevel(3)
-->8
function _update60()
	for b, p in pairs(_btnprs) do
		if p then
			_btnprs[b] = btn(b)
		end
	end

	if play then	
		battack = false
		
		local holdx = 
			btn(0) and -1
			or btn(1) and 1
		local holdy =
			btn(2) and -1
			or btn(3) and 1
		local holddirection =
			(holdx or holdy) and {
				holdx or 0,
				holdy or 0
			}
		if holdx then
			pflip = holdx < 0
		end
		
		if pjumpanim then
				pjumpanim = anim_update(anim_pjump, pjumpanim)
				if not pjumpanim then
					ppos = pjumppos
					pjumppos = nil
				end
		elseif ppos then
			if btn(5) and nlevel > 1 then
				prunanim = false
				pattackanim = false
				pholdanim = (pholdanim or 0) + mspf
				if pholdanim > anim_len(anim_phold) then
					pholdanim = false
					pjumpanim = 0
					sfx(6)					
				end
			else
				pholdanim = false
					
				if pattackanim then
					if holddirection then
						local ratio = pattackanim / anim_len(anim_pattack)
						ppos[1] += holddirection[1] * sqrt(2 * (1 - ratio)) / 2
						ppos[2] += holddirection[2] * sqrt(2 * (1 - ratio)) / 2
					end
					pattackanim = anim_update(anim_pattack, pattackanim)
				elseif btnpr(4) then
					pattackanim = 0
					sfx(3)
				elseif holddirection then
					prunanim = anim_update(anim_run, prunanim or 0, true)
					ppos[1] += holddirection[1] * pspeed
					ppos[2] += holddirection[2] * pspeed

					local pcell = cell_at(ppos)
					while band(0x1, fget(mcellget(pcell))) > 0 do
						local nc = next_cell(pcell, holddirection)
						prunanim = false
						pjumpanim = 0
						sfx(6)
						pjumppos = {nc[1] * 8 + 3, nc[2] * 8 + 3}
						pcell = nc
					end
				else
					prunanim = false
					pidleanim = anim_update(anim_idle, pidleanim or 0, true)
				end
			end
			
			if ppos then
				ppos = {ppos[1] % level_w, ppos[2] % level_h}
			end
			if pjumppos then
				pjumppos = {pjumppos[1] % level_w, pjumppos[2] % level_h}
			end
		else
			if battackanim then
				battackanim += mspf
				if battackanim >= battackanimlen then
					battackanim = false
				end
			elseif btnpr(4) then
				battack = true
				battackanim = 0
				sfx(4)
			elseif bhp < bhpmax and btnpr(5) then
				bhp += 1
				brepairanim = 0
				brepairrand = {rnd(8)-4,rnd(8)-4}
				sfx(5)
				
				if bhp == 100 then
					sfx(7)
				end
			elseif brepairanim then
				brepairanim += mspf
				if brepairanim > brepairanimlen then
					brepairanim = false
				end
			elseif holddirection and nlevel > 1 then
				pholdanim = (pholdanim or 0) + mspf
				if pholdanim > anim_len(anim_phold) then
					pholdanim = false
					pjumpanim = 0
					sfx(6)
					ppos = bpos
					pjumppos = {
						bpos[1] + holddirection[1] * 8,
						bpos[2] + holddirection[2] * 8,
					}
					local jumpcell = cell_at(pjumppos)
					while band(0x1, fget(mcellget(jumpcell))) > 0 do
						local nc = next_cell(jumpcell, holddirection)
						pjumppos = {nc[1] * 8 + 3, nc[2] * 8 + 3}
						jumpcell = nc
					end				
				end
			else
				pholdanim = false
			end
		end
		
		local new_spawn = false
		
		for t in all(delayed_ennemies) do
			t[2] -= mspf
			if t[2] < 1 then
				add(towers, t[1])
				del(delayed_ennemies, t)
				new_spawn = true
			end
		end
			
		local prev_cell = bcell
		for i, d in pairs(bdir) do
			bpos[i] += speed * bdir[i]
		end
		bcell = cell_at(bpos)
		
		if not poseq(bcell, prev_cell) then
			local flags = fget(mcellget(bcell))

			if band(0x1, flags) > 0
			and band(bnot(0x1), flags) > 0
			then
				if	band(0x80, flags) > 0
				and bdir[1] > 0
				or band(0x40, flags) > 0
				and bdir[1] < 0
				then
					bdir = {0,-1}
					bpos = {bcell[1] * 8 + 3, bcell[2] * 8 - 1}
				elseif	band(0x10, flags) > 0
				and bdir[1] > 0
				or band(0x20, flags) > 0
				and bdir[1] < 0
				then
					bdir = {0,1}
					bpos = {bcell[1] * 8 + 3, bcell[2] * 8 + 8}
				elseif	band(0x80, flags) > 0
				and bdir[2] > 0
				or band(0x10, flags) > 0
				and bdir[2] < 0
				then
					bdir = {-1,0}
					bpos = {bcell[1] * 8 - 1, bcell[2] * 8 + 3}
				elseif	band(0x40, flags) > 0
				and bdir[2] > 0
				or band(0x20, flags) > 0
				and bdir[2] < 0
				then
					bdir = {1,0}
					bpos = {bcell[1] * 8 + 8, bcell[2] * 8 + 3}
				end
				bcell = cell_at(bpos)
			end
			
			if bpos[1] > 127
			or bpos[1] < 0
			or bpos[2] > 119
			or bpos[2] < 0
			then
				if nlevel >= count(levels) then
					play = false
					ending = true
				else
					initlevel(nlevel + 1)
				end
			end
			
			if band(0x2, fget(mcellget(bcell))) > 0 and count(ennemies) > 0 then
				local group = ennemies[1]
				del(ennemies, group)
				
				for spawn in all(group) do
					local tower = make_tower(spawn[1] - level.map[1], spawn[2] - level.map[2], spawn[4])
					local delay = spawn[3] or 0
					if delay > 0 then
						add(delayed_ennemies, {tower, delay})
					else
						add(towers, tower)
						new_spawn = true
					end
				end
			end
			
			if nlevel < 3 then
				for i, t in pairs(tutos[nlevel]) do
					if poseq(t, bcell) then
						tuto = t[3]
						if nlevel == 1 and i == 2 and bhp < bhpmax then
						 tutorepair = true
						 speed = 0
						elseif nlevel == 2 and i == 1 then
							tutogetout = true
							speed = 0
						end
					end
				end
			end			
		end
		
		if new_spawn then
			sfx(1)
		end

		for tower in all(towers) do
			tower_update(tower)
			if tower.hp < 1 then
				del(towers, tower)
				sfx(0)
				if tuto then
					if bcell[1] < 8 then
						tuto = "nice job ♥"
					--elseif count(towers) == 0 then
					end
				end
			end
		end
			
		if count(towers) + count(delayed_ennemies) + count(ennemies) == 0
		then
			speed += speed * mspf / 1000
		end
		
		if tutorepair and bhp >= bhpmax then
			tutorepair = false
			speed = basespeed
			tuto = "good, let's go!"
		elseif tutogetout then
			if ppos then
				if count(towers) == 0 then
					tuto = "nice ♥ hold v\nto jump back\nin the boat"
				else	
					tuto = "move to the tower\nand smash it\nwith c!"
				end
			else
				if count(towers) == 0 then
					tutogetout = false
					speed = basespeed
					tuto = "you know it all\nmy child, the\nboat is yours.\nkeep it alive!!"
				else
					tuto = "hold a direction\nto leave\nthe boat"
				end
			end
		end
	
		if bhp < 1 then
			play = false
			gameover = 1000
		end
		
		flaganim = anim_update(anim_flag, flaganim, true)
	elseif title or gameover then
		if gameover and gameover > 0 then
			gameover -= mspf
		elseif btnpr(4) or btnpr(5) then
			initlevel(ending and 1 or nlevel)
		end
	elseif ending then
		endinganim = anim_update(anim_ending, endinganim, true)
	end
end

function anim_update(a, cur, loop)
	local step = a.step or 100
	local animlen = anim_len(a)
	return
		(loop or cur + mspf < animlen)
		and (cur + mspf) % animlen
		or false
end

-->8
local defaultflags = {
	{120, 46},
	{120, 60}
}

function _draw()
	cls()
	
	if play then	
		camera(0, -8)
		map(levels[nlevel].map[1], levels[nlevel].map[2], 0, 0, 16, 15)
		
		if tuto then
			print(tuto, 3, 88, 0)
		end
		
		if battackanim then
			circ(bpos[1], bpos[2], 0.8 * radius * battackanim / battackanimlen, 10)
			circ(bpos[1], bpos[2], radius * battackanim / battackanimlen, 10)
		end

		local boatw = bdir[1] != 0 and 7 or 3
		local boath = bdir[1] == 0 and 7 or 3
		rectfill(bpos[1] - boatw, bpos[2] - boath, bpos[1] + boatw + 1, bpos[2] + boath + 1, 4)
		
		local flagstagger = 0
		for f in all(level.flags or defaultflags) do
			anim(anim_flag, flaganim + flagstagger, f[1], f[2])
			flagstagger += 200
		end
		
		for tower in all(towers) do
			tower_draw(tower)
		end
		
		if ppos then
			if pattackanim then
				anim(
					anim_pattack, pattackanim,
					ppos[1] - (pflip and 12 or 4), ppos[2] - 4,
					pflip
				)
			elseif prunanim then
				anim(
					anim_run, prunanim,
					ppos[1] - 4, ppos[2] - 4,
					pflip
				)
			elseif pjumpanim then
				local ratio = pjumpanim / anim_len(anim_pjump)
				local target = pjumppos or {bpos[1]-4,bpos[2]-4}
				anim(
					anim_pjump, pjumpanim,
					ppos[1]-4 + ratio * (target[1]-ppos[1]+4),
					ppos[2]-4 - 6 * sin(-0.5 * ratio) + ratio * (target[2]-ppos[2]+4),
					pflip
				)
			elseif pholdanim then
				anim(
					anim_phold, pholdanim,
					ppos[1] - 4, ppos[2] - 4,
					pflip
				)
			elseif pidleanim then
				anim(
					anim_idle, pidleanim,
					ppos[1] - 4, ppos[2] - 4,
					pflip
				)
			end
		end
		
		if brepairanim then
			spr(
				3 + 16 * (flr(brepairanim / 100) % 2),
				bpos[1] - 4 + brepairrand[1],
				bpos[2] - 4 + brepairrand[2]
			)
		end
		
		camera(0, 0)
		rectfill(0, 0, level_w, 8, 0)
		print("hp:"..bhp.."/"..bhpmax, 1, 1, 7)	
		print("level:"..nlevel, 8 * 12, 1, 7)	
	elseif title then
		print("tower doffense!!", 36, 40, 7)
		print("pause anytime by pressing enter", 2, 60, 7)
		print("buttons: c, v, ⬅️➡️⬆️⬇️", 2, 70, 7)
		print("  press c or v to begin", 2, 78, 7)
	elseif gameover then
		print("game over", 44, 50, 7)
		print("kidding,  just\nmash some more\nand try again!", 35, 75, 5)
	elseif ending then
		print("congratulations !!", 26, 40, 7)
		print("the boat is a lie(ve)", 20, 60, 1)
		print("the boat is a lie", 20, 60, 7)
		spr(78, 52, 80, 2, 2)
		anim(anim_ending, endinganim, 60, 77)
	end
end

function anim(a, cur, x, y, flip_x, flip_y)
	local step = a.step or 100
	spr(
		a.frames[flr((cur % anim_len(a)) / step) % count(a.frames) + 1],
		x, y, a.w or 1, a.h or 1, flip_x, flip_y
	)
end
-->8
anim_bullet = {
	frames={8,24,40,56},
}

function make_tower(cx, cy, opts)
	local tower = {
		cx = cx,
		cy = cy,
		x = cx * 8 + 3,
		y = cy * 8 + 3,
		radius = 15,
		power = 6,
		hp = 5,
		cd = 750,
		curcd = 2000,
		anim = false,
	}
	if opts then
		for k, v in pairs(opts) do
			tower[k] = v
		end
	end
	return tower
end

function sq(a)
	return a * a
end

function tower_update(tower)
	local boatdist = sq(tower.x - bpos[1]) + sq(tower.y - bpos[2])

	if battack and boatdist < sq(radius) then
		tower.hp -= bpower
	end
	
	if ppos and pattackanim == 0
	and (
		not pflip
		and tower.x + 4 > ppos[1]
		and tower.x - 3 < ppos[1] + 8
		or
		pflip
		and tower.x - 3 < ppos[1]
		and tower.x + 4 > ppos[1] - 8
	)
	and tower.y + 4 > ppos[2] - 4
	and tower.y - 3 < ppos[2] + 4
	then
		tower.hp -= ppower		
	end
	
	if tower.hp < 1 then
		return
	end
	
	if tower.anim then
		tower.anim = anim_update(anim_bullet, tower.anim)
		
		if not tower.anim then
			bhp -= tower.power
		end
	elseif tower.curcd < 1 then
		tower.curcd = tower.cd
		
		if boatdist < sq(tower.radius) then
			tower.anim = 0
		end
	else
		tower.curcd -= mspf
	end
end

function tower_draw(tower)
	if tower.anim then
		local ratio = tower.anim / anim_len(anim_bullet)
		anim(
			anim_bullet, tower.anim,
			tower.x-4 + ratio * (bpos[1]-tower.x+4),
			tower.y-4 - 6 * sin(-0.5 * ratio) + ratio * (bpos[2]-tower.y+4),
			pflip
		)
	end
	palt(11, true)
	spr(
		tower.radius > 127 and 20 or 4,
		tower.x - 3, tower.y - 3
	)
	palt()
end
__gfx__
00000000bbbbbbbbccccccccaa990000bbbbbbbbbbbbccccccccbbbbbbbbbbbb0000000000000000000000000000000000000000000000000000000000000000
00000000bbbbbbbbccccccccaa999000bb6666bbbbccccccccccccbbb3bbbbb3000000000000000000000000000aa000000aa000000000000000000000000000
00000000bbbbbbbbcc6ccccca9999000b666666bbccccccccccccccbbb3bb33b00000000000aa000000aa0000018800000188000000000000000000000000000
00000000bbbbbbbbcccccccc99990000b668766bbccccccccccccccbbb3b33bb0007800000188000001880000108800010188000000000000000000000000000
00000000bbbbbbbbcccccccc0e200000b667866bcccc6cccccccccccbbb33bbb0007700000188000011880001108800001188000000000000000000000000000
00000000bbbbbbbbccccc6cc0e200000b666666bccccccccccc6ccccbbb3bbbb0000000001088000010880000008800000088000000000000000000000000000
00000000bbbbbbbbcccccccc0e200000bb6666bbccccccccccccccccbbbbbbbb0000000000000000000000000000000000000000000000000000000000000000
00000000bbbbbbbbcccccccc02200000bbbbbbbbccccccccccccccccbbbbbbbb0000000000000000000000000000000000000000000000000000000000000000
b6666b6666b6666bcccccccc000aaa00bbbbbbbbccccccccccccccccbbbbbbbb0000000000000000000000000000000000000000000000000000000000000000
b6666b6666b6666bcccccccc00a99990bbb77bbbccccccccccccccccbbbbbbbb0000000000000000000000000000000000000000000000000000000000000000
6555555555555665cc2cc2cc00999999bb7007bbccccccccccccccccbbbbbbbb0000000000000000000000000000000000000000000000000000000000000000
6666566656665555cccccccc00099999b687786bcccc6cccccc6ccccbbbbbbbb0007700000aa0000000000000000000000000000000000000000000000000000
5555555555555555cccccccc00e22990b656656bbccccccccccccccbbbbbbbbb0007800001880000000000000000000000000000000000000000000000000000
6656665666566655cc2cc2cc0e220000b555555bbccccccccccccccbbbb3b3bb0000000010880000000000000000000000000000000000000000000000000000
6656665666566655cccccccce2200000bb5555bbbbccccccccccccbbbbbb3bbb0000000010080000000000000000000000000000000000000000000000000000
5555555555555555cccccccc22000000bbbbbbbbbbbbccccccccbbbbbbbbbbbb0000000000000000000000000000000000000000000000000000000000000000
5666566656665655000000000000880000000800bbbbbbbbbbbbbbbbbbbbbbbb0000000000000000000000000000000000000000000000000000000000000000
5666566556655655000000000008880000008800bbbbbbbbbbbbbbbbbbbbbbbb0000000000000000000000000077000000000000000000000000000000000000
5555555555555555000000000088880000088800bbbbbbbbbbbbbbbbbb3bbbbb00000000000100a0000100a07760000000088000006080000000000000000000
6656665666566655000000000000070000880700bbbbbbbbbbbbbbbbbbb3bbbb0007700001101800011018066007000000808a00060008000000000000000000
6656655666566655000000000000070000000700bbbbbbbbbbbbbbbbbbbbbbbb0008700000008800000088800670000000000000060088000000000000000000
5555555555555555000000000000070000000700bbbbbbbbbbbbbbbbbbbbbbbb00000000000800800008006067000000006000000060a0000000000000000000
5666566656665655000000000000070000000700bbbbbbbccbbbbbbbbbbbbbbb0000000000000000000006070000000000066000000600000000000000000000
5666566656655555000000000000070000000700bbbbbbccccbbbbbbbbbbbbbb0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000080000000800bbbbbbccccbbbbbb000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000880000008800bbbbbbbccbbbbbbb0000000000000000000000a0000000a00000000000006000000660000000000000000000
0000000000000000000000000088880000088800bbbbbbbbbbbbbbbb0000000000000000011018000110180000000000000a0600000006000000000000000000
0000000000000000000000000000070000000700bbbbbbbbbbbbbbbb000000000008700000010880000108600000000000880060000000000000000000000000
0000000000000000000000000000070000000700bbbbbbbbbbbbbbbb00000000000770000000888000008780000000000080006000a808000000000000000000
0000000000000000000000000000070000000700bbbbbbbbbbbbbbbb000000000000000000000800000078000000000000080600000880000000000000000000
0000000000000000000000000000070000000700bbbbbbbbbbbbbbbb000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000070000000700bbbbbbbbbbbbbbbb000000000000000000000000000000000000000000000000000000000000000000000000
bbbbbbbb0000000000000000bbb34444ffffffffbbbb34444443bbbbffffffff0000000000000000000000000000000009000000009000000000000022220000
bbbbbbbb0000000000000000b334444fffffffffbb3444ffff443bbbffffffff0000000000000000000000000a0000000a0000000a0000000000000288882200
bbbbbbbb00000000000000003444ffffffffffffb344ffffffff43bbffffffff0000000000000000000000000700000007000000070000000000002888888820
bbbbbbbb000000000000000044ffffffffffffff344ffffffffff43bffffffff0000000000000000000000000700000007000000070000000000028888888882
bbbbbbbb000000000000000044ffffffffffffff44fffffffffff44bffffffff0000000000000000000000000700000007000000070000000000288888888882
bbbbbbbb0000000000000000444fffffffffffff34ffffffffffff43ffffffff0000000000000000000000000700000007000000070000000002888888882222
bbbbbbbb0000000000000000b344ffffffffffff3ffffffffffffff4ffffffff000000000000000000000000171000001710000017100000002888882222aaa2
bbbbbbbb0000000000000000bb334444ffffffff4ffffffffffffff4ffffffff00000000000000000000000001000000010000000100000002882222aa9aaaa2
00000000000000000000000044443bbb433444444ffffffffffffff4000000000000000000000000000000000000000000000000000000002222a9aaaaa9a222
000000000000000000000000fff443bbf444ffff4ffffffffffffff400000000000000000000000000000000000000000000000000000000a9aaaa9aa22222a2
000000000000000000000000fffff44bffffffff4fffffffffffff4400000000000000000000000000000000000000000000000000000000aa9aa222222aaa92
000000000000000000000000ffffff43ffffffff44fffffffffff44400000000000000000000000000000000000000000000000000000000222222aaa9999992
000000000000000000000000fffffff4ffffffff344fffffffff44430000000000000000000000000000000000000000000000000000000022aaaa9999999922
000000000000000000000000ffffff44ffffffffb344ffffffff443b00000000000000000000000000000000000000000000000000000000aaa9999222222200
000000000000000000000000ffff443bff4f444fbb3444ffff4443bb000000000000000000000000000000000000000000000000000000009922222200000000
00000000000000000000000044443bbb44444334bbb344444443bbbb000000000000000000000000000000000000000000000000000000002200000000000000
0000000000000000000000004ffffff44ffffff444344334ffffffff000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000004ffffff44fffff43ffffffffffffffff000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000004ffffff44fffff43ffffffffffffffff000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000034fffff34fffff44ffffffffffffffff000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000344ff44344fffff4ffffffffffffffff000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000b344444434fffff4ffffffffffffffff000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000bb3444434ffffff4ffffffffffffffff000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000bbbb333b4ffffff4ffffffff43334434000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000bbb33bbb000000004ffffffffffffff4000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000b33443bb000000003ffffffffffffff4000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000344ff43b000000004ffffffffffffff3000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000044ffff44000000004ffffffffffffff4000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000044ffff44000000004ffffffffffffff3000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000004ffffff4000000004ffffffffffffff3000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000004ffffff4000000003ffffffffffffff4000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000004ffffff4000000003ffffffffffffff4000000000000000000000000000000000000000000000000000000000000000000000000
__label__
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888eeeeee888888888888888888888888888888888888888888888888888888888888888888888888ff8ff8888228822888222822888888822888888228888
8888ee888ee88888888888888888888888888888888888888888888888888888888888888888888888ff888ff888222222888222822888882282888888222888
888eee8e8ee88888e88888888888888888888888888888888888888888888888888888888888888888ff888ff888282282888222888888228882888888288888
888eee8e8ee8888eee8888888888888888888888888888888888888888888888888888888888888888ff888ff888222222888888222888228882888822288888
888eee8e8ee88888e88888888888888888888888888888888888888888888888888888888888888888ff888ff888822228888228222888882282888222288888
888eee888ee888888888888888888888888888888888888888888888888888888888888888888888888ff8ff8888828828888228222888888822888222888888
888eeeeeeee888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
8eee8e1e1ee111ee1eee1eee11ee1ee1111111661666161116111111166616661171166611661166117111111111111111111111111111111111111111111111
8e888e1e1e1e1e1111e111e11e1e1e1e111116111611161116111111161611611711161616161611111711111111111111111111111111111111111111111111
8ee88e1e1e1e1e1111e111e11e1e1e1e111116111661161116111111166611611711166616161666111711111111111111111111111111111111111111111111
8e888e1e1e1e1e1111e111e11e1e1e1e111116111611161116111111161611611711161116161116111711111111111111111111111111111111111111111111
8e8881ee1e1e11ee11e11eee1ee11e1e111111661666166616661666161611611171161116611661117111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
71111eee1eee1eee1e1e1eee1ee11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
77111e1e1e1111e11e1e1e1e1e1e1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
77711ee11ee111e11e1e1ee11e1e1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
77771e1e1e1111e11e1e1e1e1e1e1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
77111e1e1eee11e111ee1e1e1e1e1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11711111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111166611661666161616661666166111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111161116161616161616161616161611111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111166116161661161616661661161611111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111161116161616166616161616161611111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111161116611616166616161616166611111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
111111111eee1ee11ee111111bbb1b111bbb11711666116611661111111711111ccc117111111111111111111111111111111111111111111111111111111111
111111111e1e1e1e1e1e11111b111b111b1b17111616161616111111117111111c1c111711111111111111111111111111111111111111111111111111111111
111111111eee1e1e1e1e11111bb11b111bb117111666161616661111117111111ccc111711111111111111111111111111111111111111111111111111111111
111111111e1e1e1e1e1e11111b111b111b1b17111611161611161111117111111c1c111711111111111111111111111111111111111111111111111111111111
111111111e1e1e1e1eee11111b111bbb1b1b11711611166116611111171111111ccc117111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1111111111ee1eee111111661666161116111111166616661171166611661166111111111ccc1ccc1c1c1ccc11711111111111111cc111111111111111111111
111111111e1e1e1e1111161116111611161111111616116117111616161616111111111111c11c1c1c1c1c11111711111171111111c111111111111111111111
111111111e1e1ee11111161116611611161111111666116117111666161616661111111111c11cc11c1c1cc1111711111777111111c111111111111111111111
111111111e1e1e1e1111161116111611161111111616116117111611161611161171111111c11c1c1c1c1c11111711111171111111c111111111111111111111
111111111ee11e1e1111116616661666166616661616116111711611166116611711111111c11c1c11cc1ccc11711111111111111ccc11111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1eee1ee11ee111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1e111e1e1e1e11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1ee11e1e1e1e11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1e111e1e1e1e11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1eee1e1e1eee11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1eee1e1e1ee111ee1eee1eee11ee1ee1111116611666161616661111116616661611161111711666116611661171111111111111111111111111111111111111
1e111e1e1e1e1e1111e111e11e1e1e1e111116161611161611611111161116111611161117111616161616111117111111111111111111111111111111111111
1ee11e1e1e1e1e1111e111e11e1e1e1e111116161661116111611111161116611611161117111666161616661117111111111111111111111111111111111111
1e111e1e1e1e1e1111e111e11e1e1e1e111116161611161611611111161116111611161117111611161611161117111111111111111111111111111111111111
1e1111ee1e1e11ee11e11eee1ee11e1e111116161666161611611666116616661666166611711611166116611171111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111eee1eee1eee1e1e1eee1ee11111116616661611161111111666166611711666116611661171111111111111117116661166166616161666166616611111
11111e1e1e1111e11e1e1e1e1e1e1111161116111611161111111616116117111616161616111117111111711111171116111616161616161616161616161111
11111ee11ee111e11e1e1ee11e1e1111161116611611161111111666116117111666161616661117111117771111171116611616166116161666166116161111
11111e1e1e1111e11e1e1e1e1e1e1111161116111611161111111616116117111611161611161117111111711111171116111616161616661616161616161111
11111e1e1eee11e111ee1e1e1e1e1111116616661666166616661616116111711611166116611171111111111111117116111661161616661616161616661111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1eee1ee11ee111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1e111e1e1e1e11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1ee11e1e1e1e11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1e111e1e1e1e11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1eee1e1e1eee11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
16661611166616161111111111111ccc1ccc1c1c1ccc111111111111111111111111111111111111111111111111111111111111111111111111111111111111
161616111616161611111777111111c11c1c1c1c1c11111111111111111111111111111111111111111111111111111111111111111111111111111111111111
166616111666166611111111111111c11cc11c1c1cc1111111111111111111111111111111111111111111111111111111111111111111111111111111111111
161116111616111611111777111111c11c1c1c1c1c11111111111111111111111111111111111111111111111111111111111111111111111111111111111111
161116661616166611111111111111c11c1c11cc1ccc111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
166611661666166616161111111111111ccc11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
161616161616116116161111177711111c1c11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
166116161666116111611111111111111c1c11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
161616161616116116161111177711111c1c11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
166616611616116116161111111111111ccc11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
166611661666166616161111111111111ccc1111171711111ccc1111111111111ccc111111111111111111111111111111111111111111111111111111111111
16161616161611611616111117771111111c1111117111111c1c111111711111111c111111111111111111111111111111111111111111111111111111111111
16611616166611611666111111111111111c1111177711111ccc11111777111111cc111111111111111111111111111111111111111111111111111111111111
16161616161611611116111117771111111c1111117111111c1c111111711111111c111111111111111111111111111111111111111111111111111111111111
16661661161611611666111111111111111c1111171711111ccc1111111111111ccc111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
16661166166616161666166616611111111111111ccc1ccc1c1c1ccc111111111111111111111111111111111111111111111111111111111111111111111111
161116161616161616161616161611111777111111c11c1c1c1c1c11111111111111111111111111111111111111111111111111111111111111111111111111
166116161661161616661661161611111111111111c11cc11c1c1cc1111111111111111111111111111111111111111111111111111111111111111111111111
161116161616166616161616161611111777111111c11c1c1c1c1c11111111111111111111111111111111111111111111111111111111111111111111111111
161116611616166616161616166611111111111111c11c1c11cc1ccc111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
16161166166616661666116616611666166616111111111111111ccc1ccc1c1c1ccc111111111111111111111111111111111111111111111111111111111111
161616161616116111161616161611611616161111111777111111c11c1c1c1c1c11111111111111111111111111111111111111111111111111111111111111
166616161661116111611616161611611666161111111111111111c11cc11c1c1cc1111111111111111111111111111111111111111111111111111111111111
161616161616116116111616161611611616161111111777111111c11c1c1c1c1c11111111111111111111111111111111111111111111111111111111111111
161616611616166616661661161611611616166611111111111111c11c1c11cc1ccc111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11661666161116111616111111111111116616661611161111111666166611711666116616661666161611711111111111111111111111111111111111111111
16111611161116111616111117771111161116111611161111111616116117111616161616161161161611171111111111111111111111111111111111111111
16111661161116111161111111111111161116611611161111111666116117111661161616661161116111171111111111111111111111111111111111111111
16111611161116111616111117771111161116111611161111111616116117111616161616161161161611171111111111111111111111111111111111111111
11661666166616661616111111111111116616661666166616661616116111711666166116161161161611711111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11661666161116111616111111111111116616661611161111111666166611711666116616661666161611711111111111111111111111111111111111111111
16111611161116111616111117771111161116111611161111111616116117111616161616161161161611171111111111111111111111111111111111111111
16111661161116111666111111111111161116611611161111111666116117111661161616661161166611171111111111111111111111111111111111111111
16111611161116111116111117771111161116111611161111111616116117111616161616161161111611171111111111111111111111111111111111111111
11661666166616661666111111111111116616661666166616661616116111711666166116161161166611711111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
161616661666166616661111111111111ccc11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
16161616116116111616111117771111111c11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
161616661161166116611111111111111ccc11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
82888222822882228888822888828222828888888888888888888888888888888888888888888888888888888228822282228882822282288222822288866688
82888828828282888888882888288288828888888888888888888888888888888888888888888888888888888828828282888828828288288282888288888888
82888828828282288888882888288222822288888888888888888888888888888888888888888888888888888828822282228828822288288222822288822288
82888828828282888888882888288882828288888888888888888888888888888888888888888888888888888828828288828828828288288882828888888888
82228222828282228888822282888222822288888888888888888888888888888888888888888888888888888222822282228288822282228882822288822288
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888

__gff__
0000010101211100000000000000000000000301014181000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0101010101010101010101010101010101010101010101010101010101010101404040404040174001644040010101010101010101270101010115062601010107170101010101010101010201011707000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101011701010101010101070101010101010101010101010101010101545446074040404001634001404354544001010101010101011735150626070117010101010101010101010201010117000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010117010101011701010502020202021206012701014055534040400101400127014040400101270101010101010101351502062601010101010101010101011201010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101270101010101010101010101010101010101010236270101013502010101010101010101010101010101404001010101010107010107010101010735150201010101272727270101010201010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101011201010117010102010101020202120202020212020601400101010212021202020202020206010101010101010105020202020601010201010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101012701010101010101010101010226010101010102010101010117010101010101350201010107010101010101010701010702010101010101010102360101350201010201010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101251202020206170102260101012526010101010701010201010101010101010101010101010102010101010101010102010707010201010201010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0202120202020202120202020202020202120202021636273502270115020202013536010101010101250201252601010101010506010101010102170101010101010112270101271201010201010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101010101011702070101010101010101050202020202121601353601010101050202060101010102010101010101010102011701010201010201010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101011701012701010101010101070101170101010101010102070101010101010101123601010101010101010101010105020202020601010702010101010101010102260101250226250201010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101010101010702270125260101012701151202020202020202020202020115020202021601010702070101010101010115020202021202021601010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101010101010102070135360101010101010101010101400101010101010101150202160101011702070101010101010125051601350236010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101070101010101010101011701010101010101010101010702170101012701010101010107014040400101270101010101011516010101010102070101010101010512160101010201010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101010101011702070101010101011701010101435454460101010101170101010101010101010102010101010117011516010101010201010101010117000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101270101010702070101010101010101010101010127644001010101010101010101010101010102010101010107170101010101010201010101011707000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
00010000223502f3502b350273501c3501935016350143502e350123501e350123501d350133501835015350163501335011350163500f350153500e350213500e350133500f3500f350103500d3500d35011350
0002000003750067500975009750097500675004750047500575005750067500775007750077500775008750087500b7500d7501175013750167501b75020250232502725027250222502b25021250262501d250
0001000028650266502365021650216502c650106500d65027650176501465013650066501765005650126500565010650056500f65006650066500565002650006500a650096500d65008650076500765008650
000100000263004630086300c630136301c6302263024630256302563024630266302a6302f630336303363033630326302e6000b600006000060000600006000060000600006000060001600016000060000600
0002000001350023500335005350083500a3500e3500f3500c3000330002300013000130001300003000030004600006000960008600066000460003600036000260001600006000800008000080000000000000
0001000025640216401c6401a640146401263010330103201132014320163201a3201c320223202b3200930012300293002130023300263002830000000000000000000000000000000000000000000000000000
00020000010200202003020040200603007030090300c0300e03010030130301503017030190200b00009000080000700006000050000500004000040001e3001d3001d3001b3001a30019300173001630015300
000400003d340224003d340284003d34034440383403d4403c4003d4403c4003d400364003d3003d3003d3003d3003d3000000000000000000000000000000000000000000000000000000000000000000000000
